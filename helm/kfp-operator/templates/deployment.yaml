apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kfp-operator.fullname" . }}-controller-manager
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "kfp-operator.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "kfp-operator.labels" . | nindent 6 }}
  replicas: {{ .Values.manager.replicas }}
  template:
    metadata:
      {{- $defaultMetadata := dict "labels"  ((include "kfp-operator.labels" .) | fromYaml) -}}
      {{- (merge .Values.manager.metadata $defaultMetadata) | toYaml | nindent 6 }}
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
        - name: manager
          command:
            - /manager
          args:
            - --config=controller_manager_config.yaml
            {{ if .Values.logging.verbosity }}
            - --zap-log-level={{ .Values.logging.verbosity }}
            {{ end }}
          image: {{ include "kfp-operator.trimmedContainerRegistry" .  }}kfp-operator-controller:{{ .Chart.AppVersion }}
          securityContext:
            allowPrivilegeEscalation: false
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- .Values.manager.resources | toYaml | nindent 12 }}
          volumeMounts:
          {{- if .Values.manager.multiversion.enabled }}
            - name: cert
              mountPath: /tmp/k8s-webhook-server/serving-certs
              readOnly: true
           {{ end }}
            - mountPath: /controller_manager_config.yaml
              name: manager-config
              subPath: controller_manager_config.yaml
          ports:
        {{- if .Values.manager.multiversion.enabled }}
           - name: webhook-server
             containerPort: 9443
             protocol: TCP
        {{ end }}
        {{- if .Values.manager.monitoring.create }}
        {{ if not .Values.manager.monitoring.rbacSecured }}
           - containerPort: 8080
             name: http
        {{- else -}}
        - name: kube-rbac-proxy
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
          args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=10
          ports:
            - containerPort: 8443
              name: https
        {{ end }}
        {{- end }}
      volumes:
        {{- if .Values.manager.multiversion.enabled }}
        - name: cert
          secret:
            defaultMode: 420
            secretName: {{ if eq .Values.manager.multiversion.webhookCertificates.provider "cert-manager" }}webhook-server-cert{{ else }}{{ .Values.manager.multiversion.webhookCertificates.secretName }}{{ end }}
        {{- end }}
        - configMap:
            name: kfp-operator-manager-config
          name: manager-config
      serviceAccountName: {{ .Values.manager.serviceAccount.name }}
      terminationGracePeriodSeconds: 10
