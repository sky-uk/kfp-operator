apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: {{ include "kfp-operator.fullname" . }}-compiled-workflow-steps
  namespace: {{ include "kfp-operator.argoNamespace" . }}
spec:
  templates:
  - name: compile
    inputs:
      parameters:
      - name: resource-image
      - name: provider-config
      - name: pipeline-framework-image
      artifacts:
      - name: resource-definition
        raw:
          data: |
            {{`{{workflow.parameters.resource-definition}}`}}
        path: /resource-definition.yaml
      - name: provider-config
        path: /provider-config.json
        raw:
          data: |
            {{`{{workflow.parameters.provider-config}}`}}
    outputs:
      artifacts:
      - name: resource
        path: /tmp/resource.json
    metadata:
      {{- .Values.manager.argo.metadata | toYaml | nindent 6 }}
    activeDeadlineSeconds: {{ .Values.manager.argo.stepTimeoutSeconds.compile }}
    container:
      command:
      - /shared/compile.sh
      image: "{{`{{inputs.parameters.resource-image}}`}}"
      name: resource
      volumeMounts:
      - mountPath: /shared
        name: shared
      args:
      - --output_file
      - /tmp/resource.json
      - --{{`{{workflow.parameters.resource-kind}}`}}_config
      - /resource-definition.yaml
      - --provider_config
      - /provider-config.json
      {{- include "kfp-operator.notEmptyYaml" .Values.manager.argo.containerDefaults | nindent 6 }}
    volumes:
    - name: shared
    initContainers:
    - args:
      - /shared
      image: "{{`{{workflow.parameters.pipeline-framework-image}}`}}"
      mirrorVolumeMounts: true
      name: compile
      {{- include "kfp-operator.notEmptyYaml" .Values.manager.argo.containerDefaults | nindent 6 }}
  - name: combine-files
    inputs:
      artifacts:
        - name: resource
          path: /resource.json
        - name: resource-definition
          path: /resource-definition.yaml
          raw:
            data: |
              {{`{{workflow.parameters.resource-definition}}`}}
    outputs:
      artifacts:
        - name: combined
          path: /tmp/combined.json
    container:
      image: mikefarah/yq:4.45.1
      command: [sh,-c]
      args:
        - |
          echo "resource-definition.yaml:"
          cat /resource-definition.yaml

          echo "Converting resource-definition.yaml to json"
          RESOURCE_DEFINITION_JSON=$(yq eval -o=json /resource-definition.yaml)
          RESOURCE_JSON=$(cat /resource.json)

          echo "Combining resource definition and resource"
          COMBINED=$(echo "{\"pipelineDefinition\": $RESOURCE_DEFINITION_JSON, \"compiledPipeline\": $RESOURCE_JSON}")

          echo "Combined resource file:"
          echo $COMBINED | tee /tmp/combined.json
  - name: create
    inputs:
      artifacts:
      - name: combined
        path: /combined.json
    activeDeadlineSeconds: {{ .Values.manager.argo.stepTimeoutSeconds.default }}
    metadata:
      {{- .Values.manager.argo.metadata | toYaml | nindent 6 }}
    container:
      image: curlimages/curl:8.12.1
      command: [sh, -c]
      args:
      - |
        curl -v -X POST -H "Content-Type: application/json" \
            --data-binary @{{`{{inputs.artifacts.combined.path}}`}} \
            "example.com/resource/{{`{{workflow.parameters.resource-kind}}`}}"
  - name: update
    inputs:
      artifacts:
      - name: combined
        path: /combined.json
      parameters:
      - name: url-encoded-resource-id
    activeDeadlineSeconds: {{ .Values.manager.argo.stepTimeoutSeconds.default }}
    metadata:
      {{- .Values.manager.argo.metadata | toYaml | nindent 6 }}
    container:
      image: curlimages/curl:8.12.1
      command: [sh, -c]
      args:
      - |
        curl -v -X PUT -H "Content-Type: application/json" \
            --data-binary @{{`{{inputs.artifacts.combined.path}}`}} \
            "example.com/resource/{{`{{workflow.parameters.resource-kind}}`}}/{{`{{inputs.parameters.url-encoded-resource-id}}`}}"
    {{- include "kfp-operator.notEmptyYaml" .Values.manager.argo.containerDefaults | nindent 6 }}
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: {{ include "kfp-operator.fullname" . }}-create-compiled
  namespace: {{ include "kfp-operator.argoNamespace" . }}
spec:
  ttlStrategy:
    {{- .Values.manager.argo.ttlStrategy | toYaml | nindent 4 }}
  arguments:
    parameters:
    - name: provider-config
    - name: provider-name
    - name: resource-kind
    - name: resource-definition
    - name: pipeline-framework-image
  entrypoint: main
  serviceAccountName: {{ .Values.manager.argo.serviceAccount.name }}
  templates:
  - name: main
    outputs:
      parameters:
      - name: provider-output
        valueFrom:
          parameter: '{{`{{steps.provider.outputs.parameters.provider-output}}`}}'
    steps:
    - - name: select-provider-image
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-common-steps
          template: select-provider-parameter
        arguments:
          parameters:
          - name: field
            value: image
          - name: provider-config
            value: '{{`{{workflow.parameters.provider-config}}`}}'
    - - name: select-provider-sa
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-common-steps
          template: select-provider-parameter
        arguments:
          parameters:
          - name: field
            value: serviceAccount
          - name: provider-config
            value: '{{`{{workflow.parameters.provider-config}}`}}'
    - - name: select-resource-image
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-common-steps
          template: select-resource-image
    - - name: compile
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-compiled-workflow-steps
          template: compile
        arguments:
          parameters:
          - name: resource-image
            value: '{{`{{steps.select-resource-image.outputs.result}}`}}'
          - name: provider-config
            value: '{{`{{workflow.parameters.provider-config}}`}}'
          - name: pipeline-framework-image
            value: '{{`{{workflow.parameters.pipeline-framework-image}}`}}'
    - - name: combine-files
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-compiled-workflow-steps
          template: combine-files
        arguments:
          artifacts:
            - from: '{{`{{steps.compile.outputs.artifacts.resource}}`}}'
              name: resource
    - - name: provider
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-compiled-workflow-steps
          template: create
        arguments:
          artifacts:
          - from: '{{`{{steps.combine-files.outputs.artifacts.combined}}`}}'
            name: combined
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: {{ include "kfp-operator.fullname" . }}-update-compiled
  namespace: {{ include "kfp-operator.argoNamespace" . }}
spec:
  ttlStrategy:
    {{- .Values.manager.argo.ttlStrategy | toYaml | nindent 4 }}
  arguments:
    parameters:
    - name: provider-config
    - name: provider-name
    - name: resource-kind
    - name: resource-id
    - name: resource-definition
    - name: pipeline-framework-image
  entrypoint: main
  serviceAccountName: {{ .Values.manager.argo.serviceAccount.name }}
  templates:
  - name: main
    outputs:
      parameters:
      - name: provider-output
        valueFrom:
          parameter: '{{`{{steps.provider.outputs.parameters.provider-output}}`}}'
    steps:
    - - name: select-provider-image
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-common-steps
          template: select-provider-parameter
        arguments:
          parameters:
          - name: field
            value: image
          - name: provider-config
            value: '{{`{{workflow.parameters.provider-config}}`}}'
    - - name: select-provider-sa
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-common-steps
          template: select-provider-parameter
        arguments:
          parameters:
          - name: field
            value: serviceAccount
          - name: provider-config
            value: '{{`{{workflow.parameters.provider-config}}`}}'
    - - name: select-resource-image
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-common-steps
          template: select-resource-image
    - - name: compile
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-compiled-workflow-steps
          template: compile
        arguments:
          parameters:
          - name: resource-image
            value: '{{`{{steps.select-resource-image.outputs.result}}`}}'
          - name: provider-config
            value: '{{`{{workflow.parameters.provider-config}}`}}'
          - name: pipeline-framework-image
            value: '{{`{{workflow.parameters.pipeline-framework-image}}`}}'
    - - name: combine-files
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-compiled-workflow-steps
          template: combine-files
        arguments:
          artifacts:
          - from: '{{`{{steps.compile.outputs.artifacts.resource}}`}}'
            name: resource
    - - name: url-encode-resource-id
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-common-steps
          template: url-encode
        arguments:
          parameters:
            - name: unencoded
              value: '{{`{{workflow.parameters.resource-id}}`}}'
    - - name: provider
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-compiled-workflow-steps
          template: update
        arguments:
          artifacts:
          - from: '{{`{{steps.combine-files.outputs.artifacts.combined}}`}}'
            name: combined
          parameters:
          - name: url-encoded-resource-id
            value: '{{`{{steps.url-encode-resource-id.outputs.parameters.url-encoded}}`}}'
