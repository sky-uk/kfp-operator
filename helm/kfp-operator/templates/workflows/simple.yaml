apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: {{ include "kfp-operator.fullname" . }}-simple-workflow-steps
  namespace: {{ include "kfp-operator.argoNamespace" . }}
spec:
  templates:
  - name: create
    inputs:
      artifacts:
      - name: resource-definition
        path: /resource-definition.json
      parameters:
      - name: provider-service-url
    metadata:
      {{- .Values.manager.argo.metadata | toYaml | nindent 6 }}
    activeDeadlineSeconds: {{ .Values.manager.argo.stepTimeoutSeconds.default }}
    container:
      image: curlimages/curl:8.12.1
      command: [sh, -c]
      args:
      - |
        curl -v -X POST -H "Content-Type: application/json" \
            --data-binary @{{`{{inputs.artifacts.resource-definition.path}}`}} \
            "{{`{{workflow.parameters.provider-service-url}}`}}/resource/{{`{{workflow.parameters.resource-kind}}`}}"
    {{- include "kfp-operator.notEmptyYaml" .Values.manager.argo.containerDefaults | nindent 6 }}
  - name: update
    inputs:
      artifacts:
      - name: resource-definition
        path: /resource-definition.json
      parameters:
      - name: url-encoded-resource-id
      - name: provider-service-url
    metadata:
      {{- .Values.manager.argo.metadata | toYaml | nindent 6 }}
    activeDeadlineSeconds: {{ .Values.manager.argo.stepTimeoutSeconds.default }}
    container:
      image: curlimages/curl:8.12.1
      command: [sh, -c]
      args:
      - |
        curl -v -X PUT -H "Content-Type: application/json" \
            --data-binary @{{`{{inputs.artifacts.resource-definition.path}}`}} \
            "{{`{{workflow.parameters.provider-service-url}}`}}/resource/{{`{{workflow.parameters.resource-kind}}`}}/{{`{{inputs.parameters.url-encoded-resource-id}}`}}"
    {{- include "kfp-operator.notEmptyYaml" .Values.manager.argo.containerDefaults | nindent 6 }}
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: {{ include "kfp-operator.fullname" . }}-create-simple
  namespace: {{ include "kfp-operator.argoNamespace" . }}
spec:
  ttlStrategy:
    {{- .Values.manager.argo.ttlStrategy | toYaml | nindent 4 }}
  arguments:
    parameters:
    - name: provider-config
    - name: provider-name
    - name: provider-service-url
    - name: resource-kind
    - name: resource-definition
  entrypoint: main
  serviceAccountName: {{ .Values.manager.argo.serviceAccount.name }}
  templates:
  - name: main
    steps:
    - - name: select-provider-image
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-common-steps
          template: select-provider-parameter
        arguments:
          parameters:
          - name: field
            value: image
          - name: provider-config
            value: '{{`{{workflow.parameters.provider-config}}`}}'
    - - name: select-provider-sa
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-common-steps
          template: select-provider-parameter
        arguments:
          parameters:
          - name: field
            value: serviceAccount
          - name: provider-config
            value: '{{`{{workflow.parameters.provider-config}}`}}'
    - - name: convert-resource-definition-yaml-to-json
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-common-steps
          template: yaml-to-json
        arguments:
          parameters:
          - name: yaml
            value: '{{`{{workflow.parameters.resource-definition}}`}}'
    - - name: provider
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-simple-workflow-steps
          template: create
        arguments:
          artifacts:
          - from: '{{`{{steps.convert-resource-definition-yaml-to-json.outputs.artifacts.json}}`}}'
            name: resource-definition
          parameters:
          - name: provider-service-url
            value: '{{`{{workflow.parameters.provider-service-url}}`}}'
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: {{ include "kfp-operator.fullname" . }}-update-simple
  namespace: {{ include "kfp-operator.argoNamespace" . }}
spec:
  ttlStrategy:
    {{- .Values.manager.argo.ttlStrategy | toYaml | nindent 4 }}
  arguments:
    parameters:
    - name: provider-config
    - name: provider-name
    - name: provider-service-url
    - name: resource-kind
    - name: resource-id
    - name: resource-definition
  entrypoint: main
  serviceAccountName: {{ .Values.manager.argo.serviceAccount.name }}
  templates:
  - name: main
    steps:
    - - name: select-provider-image
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-common-steps
          template: select-provider-parameter
        arguments:
          parameters:
          - name: field
            value: image
          - name: provider-config
            value: '{{`{{workflow.parameters.provider-config}}`}}'
    - - name: select-provider-sa
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-common-steps
          template: select-provider-parameter
        arguments:
          parameters:
          - name: field
            value: serviceAccount
          - name: provider-config
            value: '{{`{{workflow.parameters.provider-config}}`}}'
    - - name: convert-resource-definition-yaml-to-json
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-common-steps
          template: yaml-to-json
        arguments:
          parameters:
          - name: yaml
            value: '{{`{{workflow.parameters.resource-definition}}`}}'
    - - name: url-encode-resource-id
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-common-steps
          template: url-encode
        arguments:
          parameters:
          - name: unencoded
            value: '{{`{{workflow.parameters.resource-id}}`}}'
    - - name: provider
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-simple-workflow-steps
          template: update
        arguments:
          artifacts:
          - from: '{{`{{steps.convert-resource-definition-yaml-to-json.outputs.artifacts.json}}`}}'
            name: resource-definition
          parameters:
          - name: url-encoded-resource-id
            value: '{{`{{steps.url-encode-resource-id.outputs.parameters.url-encoded}}`}}'
          - name: provider-service-url
            value: '{{`{{workflow.parameters.provider-service-url}}`}}'
