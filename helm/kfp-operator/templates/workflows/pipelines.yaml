apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: {{ include "kfp-operator.fullname" . }}-pipeline-steps
  namespace: {{ include "kfp-operator.argoNamespace" . }}
spec:
  templates:
  - name: compile
    inputs:
      parameters:
      - name: pipeline-image
      - name: execution-mode
      artifacts:
      - name: pipeline-definition
        raw:
          data: |
            {{`{{workflow.parameters.pipeline-definition}}`}}
        path: /pipeline-definition.yaml
    outputs:
      artifacts:
      - name: pipeline
        path: /pipeline.yaml
    metadata:
      {{- .Values.manager.argo.metadataDefaults | toYaml | nindent 6 }}
    container:
      command:
      - /shared/compile.sh
      image: "{{`{{inputs.parameters.pipeline-image}}`}}"
      name: pipeline
      volumeMounts:
      - mountPath: /shared
        name: shared
      args:
      - --output_file
      - /pipeline.yaml
      - --pipeline_config
      - /pipeline-definition.yaml
      - --execution_mode
      - "{{`{{inputs.parameters.execution-mode}}`}}"
      {{- include "kfp-operator.notEmptyYaml" .Values.manager.argo.containerDefaults | nindent 6 }}
    volumes:
    - name: shared
    initContainers:
    - args:
      - /shared
      image: {{ include "kfp-operator.trimmedContainerRegistry" . }}kfp-operator-argo-kfp-compiler:{{ .Chart.AppVersion }}
      mirrorVolumeMounts: true
      name: compile
      {{- include "kfp-operator.notEmptyYaml" .Values.manager.argo.containerDefaults | nindent 6 }}
  - name: create
    inputs:
      parameters:
      - name: provider-image
      - name: provider-sa
      artifacts:
      - name: pipeline
        path: /pipeline.yaml
      - name: pipeline-definition
        path: /pipeline-definition.yaml
        raw:
          data: |
            {{`{{workflow.parameters.pipeline-definition}}`}}
    outputs:
      parameters:
      - name: provider-output
        valueFrom:
          path: /tmp/provider-output.yaml
    podSpecPatch: '{"serviceAccountName": "{{`{{inputs.parameters.provider-sa}}`}}"}'
    metadata:
      {{- .Values.manager.argo.metadataDefaults | toYaml | nindent 6 }}
    container:
      image: "{{`{{inputs.parameters.provider-image}}`}}"
      volumeMounts:
      - name: providers-config
        mountPath: /providers-config
      command:
      - /provider
      args:
      - --provider-config
      - /providers-config/{{`{{workflow.parameters.provider-name}}`}}
      - pipeline
      - create
      - --pipeline-definition
      - /pipeline-definition.yaml
      - --pipeline-file
      - /pipeline.yaml
      - --out
      - /tmp/provider-output.yaml
    {{- include "kfp-operator.notEmptyYaml" .Values.manager.argo.containerDefaults | nindent 6 }}
  - name: update
    inputs:
      artifacts:
      - name: pipeline
        path: /pipeline.yaml
      - name: pipeline-definition
        path: /pipeline-definition.yaml
        raw:
          data: |
            {{`{{workflow.parameters.pipeline-definition}}`}}
      parameters:
      - name: pipeline-id
      - name: provider-image
      - name: provider-sa
    outputs:
      parameters:
      - name: provider-output
        valueFrom:
          path: /tmp/provider-output.yaml
    podSpecPatch: '{"serviceAccountName": "{{`{{inputs.parameters.provider-sa}}`}}"}'
    metadata:
      {{- .Values.manager.argo.metadataDefaults | toYaml | nindent 6 }}
    container:
      image: "{{`{{inputs.parameters.provider-image}}`}}"
      volumeMounts:
      - name: providers-config
        mountPath: /providers-config
      command:
      - /provider
      args:
      - --provider-config
      - /providers-config/{{`{{workflow.parameters.provider-name}}`}}
      - pipeline
      - update
      - --pipeline-definition
      - /pipeline-definition.yaml
      - --pipeline-id
      - '{{`{{inputs.parameters.pipeline-id}}`}}'
      - --pipeline-file
      - /pipeline.yaml
      - --out
      - /tmp/provider-output.yaml
    {{- include "kfp-operator.notEmptyYaml" .Values.manager.argo.containerDefaults | nindent 6 }}
  - name: delete
    inputs:
      parameters:
      - name: provider-image
      - name: provider-sa
    outputs:
      parameters:
      - name: provider-output
        valueFrom:
          path: /tmp/provider-output.yaml
    podSpecPatch: '{"serviceAccountName": "{{`{{inputs.parameters.provider-sa}}`}}"}'
    metadata:
      {{- .Values.manager.argo.metadataDefaults | toYaml | nindent 6 }}
    container:
      image: "{{`{{inputs.parameters.provider-image}}`}}"
      volumeMounts:
      - name: providers-config
        mountPath: /providers-config
      command:
      - /provider
      args:
      - --provider-config
      - /providers-config/{{`{{workflow.parameters.provider-name}}`}}
      - pipeline
      - delete
      - --pipeline-definition
      - /pipeline-definition.yaml
      - --pipeline-id
      - '{{`{{workflow.parameters.pipeline-id}}`}}'
      - --out
      - /tmp/provider-output.yaml
    {{- include "kfp-operator.notEmptyYaml" .Values.manager.argo.containerDefaults | nindent 6 }}
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: {{ include "kfp-operator.fullname" . }}-create-pipeline
  namespace: {{ include "kfp-operator.argoNamespace" . }}
spec:
  volumes:
  - name: providers-config
    configMap:
      name: {{ include "kfp-operator.fullname" . }}-providers
  ttlStrategy:
    {{- .Values.manager.argo.ttlStrategy | toYaml | nindent 4 }}
  arguments:
    parameters:
    - name: provider-name
    - name: pipeline-definition
  entrypoint: main
  {{ if .Values.manager.argo.serviceAccount -}}
  serviceAccountName: {{ .Values.manager.argo.serviceAccount }}
  {{- end }}
  templates:
  - name: main
    outputs:
      parameters:
      - name: provider-output
        valueFrom:
          parameter: '{{`{{steps.provider.outputs.parameters.provider-output}}`}}'
    steps:
    - - name: select-provider-image
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-common-steps
          template: select-provider-parameter
        arguments:
          parameters:
          - name: parameter
            value: image
    - - name: select-provider-sa
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-common-steps
          template: select-provider-parameter
        arguments:
          parameters:
          - name: parameter
            value: serviceAccount
    - - name: select-execution-mode
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-common-steps
          template: select-provider-parameter
        arguments:
          parameters:
          - name: parameter
            value: executionMode
    - - name: select-pipeline-image
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-common-steps
          template: select-pipeline-image
    - - name: compile
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-pipeline-steps
          template: compile
        arguments:
          parameters:
          - name: pipeline-image
            value: '{{`{{steps.select-pipeline-image.outputs.result}}`}}'
          - name: execution-mode
            value: '{{`{{steps.select-execution-mode.outputs.result}}`}}'
    - - name: provider
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-pipeline-steps
          template: create
        arguments:
          artifacts:
          - from: '{{`{{steps.compile.outputs.artifacts.pipeline}}`}}'
            name: pipeline
          parameters:
          - name: provider-image
            value: '{{`{{steps.select-provider-image.outputs.result}}`}}'
          - name: provider-sa
            value: '{{`{{steps.select-provider-sa.outputs.result}}`}}'
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: {{ include "kfp-operator.fullname" . }}-update-pipeline
  namespace: {{ include "kfp-operator.argoNamespace" . }}
spec:
  volumes:
  - name: providers-config
    configMap:
      name: {{ include "kfp-operator.fullname" . }}-providers
  ttlStrategy:
    {{- .Values.manager.argo.ttlStrategy | toYaml | nindent 4 }}
  arguments:
    parameters:
    - name: provider-name
    - name: pipeline-id
    - name: pipeline-definition
  entrypoint: main
  {{ if .Values.manager.argo.serviceAccount -}}
  serviceAccountName: {{ .Values.manager.argo.serviceAccount }}
  {{- end }}
  templates:
  - name: main
    outputs:
      parameters:
      - name: provider-output
        valueFrom:
          parameter: '{{`{{steps.provider.outputs.parameters.provider-output}}`}}'
    steps:
    - - name: select-provider-image
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-common-steps
          template: select-provider-parameter
        arguments:
          parameters:
          - name: parameter
            value: image
    - - name: select-provider-sa
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-common-steps
          template: select-provider-parameter
        arguments:
          parameters:
          - name: parameter
            value: serviceAccount
    - - name: select-execution-mode
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-common-steps
          template: select-provider-parameter
        arguments:
          parameters:
          - name: parameter
            value: executionMode
    - - name: select-pipeline-image
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-common-steps
          template: select-pipeline-image
    - - name: compile
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-pipeline-steps
          template: compile
        arguments:
          parameters:
          - name: pipeline-image
            value: '{{`{{steps.select-pipeline-image.outputs.result}}`}}'
          - name: execution-mode
            value: '{{`{{steps.select-execution-mode.outputs.result}}`}}'
    - - name: provider
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-pipeline-steps
          template: update
        arguments:
          artifacts:
          - from: '{{`{{steps.compile.outputs.artifacts.pipeline}}`}}'
            name: pipeline
          parameters:
          - name: pipeline-id
            value: '{{`{{workflow.parameters.pipeline-id}}`}}'
          - name: provider-image
            value: '{{`{{steps.select-provider-image.outputs.result}}`}}'
          - name: provider-sa
            value: '{{`{{steps.select-provider-sa.outputs.result}}`}}'
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: {{ include "kfp-operator.fullname" . }}-delete-pipeline
  namespace: {{ include "kfp-operator.argoNamespace" . }}
spec:
  volumes:
  - name: providers-config
    configMap:
      name: {{ include "kfp-operator.fullname" . }}-providers
  ttlStrategy:
    {{- .Values.manager.argo.ttlStrategy | toYaml | nindent 4 }}
  arguments:
    parameters:
    - name: provider-name
    - name: pipeline-id
  entrypoint: main
  {{ if .Values.manager.argo.serviceAccount -}}
  serviceAccountName: {{ .Values.manager.argo.serviceAccount }}
  {{- end }}
  templates:
  - name: main
    outputs:
      parameters:
      - name: provider-output
        valueFrom:
          parameter: '{{`{{steps.provider.outputs.parameters.provider-output}}`}}'
    steps:
    - - name: select-provider-image
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-common-steps
          template: select-provider-parameter
        arguments:
          parameters:
          - name: parameter
            value: image
    - - name: select-provider-sa
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-common-steps
          template: select-provider-parameter
        arguments:
          parameters:
          - name: parameter
            value: serviceAccount
    - - name: provider
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-pipeline-steps
          template: delete
        arguments:
          parameters:
          - name: provider-image
            value: '{{`{{steps.select-provider-image.outputs.result}}`}}'
          - name: provider-sa
            value: '{{`{{steps.select-provider-sa.outputs.result}}`}}'
