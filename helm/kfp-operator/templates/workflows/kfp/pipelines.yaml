apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: {{ include "kfp-operator.fullname" . }}-pipeline-steps
spec:
  templates:
  - name: select-image
    inputs:
      artifacts:
      - name: provider-config
        path: /tmp/provider-config.yaml
        raw:
          data: |
            {{`{{workflow.parameters.provider-config}}`}}
    script:
      command:
      - sh
      image: mikefarah/yq:4.27.5
      source:  yq e '.image' /tmp/provider-config.yaml
  - name: compile
    outputs:
      artifacts:
      - name: pipeline
        path: /tmp/pipeline.yaml
    metadata:
      {{- .Values.manager.argo.metadataDefaults | toYaml | nindent 6 }}
    container:
      command:
      - /shared/compile.sh
      image: '{{`{{workflow.parameters.pipeline-image}}`}}'
      name: pipeline
      volumeMounts:
      - mountPath: /shared
        name: shared
      args:
      - --output_file
      - /tmp/pipeline.yaml
      - --pipeline_config
      - /tmp/pipeline-config.yaml
      {{- include "kfp-operator.notEmptyYaml" .Values.manager.argo.containerDefaults | nindent 6 }}
    volumes:
    - name: shared
    - name: provider
      configMap:
        name: sherlock-config
    initContainers:
    - args:
      - /shared
      image: {{ include "kfp-operator.trimmedContainerRegistry" . }}kfp-operator-argo-kfp-compiler:{{ .Chart.AppVersion }}
      mirrorVolumeMounts: true
      name: compile
      {{- include "kfp-operator.notEmptyYaml" .Values.manager.argo.containerDefaults | nindent 6 }}
    inputs:
      artifacts:
      - name: pipeline-config
        raw:
          data: |
            {{`{{workflow.parameters.pipeline-config}}`}}
        path: /tmp/pipeline-config.yaml
  - name: upload
    inputs:
      parameters:
      - name: image
      artifacts:
      - name: pipeline
        path: /tmp/pipeline.yaml
      - name: pipeline-config
        path: /tmp/pipeline-config.yaml
        raw:
          data: |
            {{`{{workflow.parameters.pipeline-config}}`}}
      - name: provider-config
        path: /tmp/provider-config.yaml
        raw:
          data: |
            {{`{{workflow.parameters.provider-config}}`}}
    metadata:
      {{- .Values.manager.argo.metadataDefaults | toYaml | nindent 6 }}
    script:
      command:
      - ash
      image: "{{`{{inputs.parameters.image}}`}}"
      source: /provider.sh pipeline create /tmp/pipeline-config.yaml /tmp/provider-config.yaml
    {{- include "kfp-operator.notEmptyYaml" .Values.manager.argo.containerDefaults | nindent 6 }}
  - name: update
    inputs:
      artifacts:
      - name: pipeline
        path: /tmp/pipeline.yaml
      - name: pipeline-config
        path: /tmp/pipeline-config.yaml
        raw:
          data: |
            {{`{{workflow.parameters.pipeline-config}}`}}
      - name: provider-config
        path: /tmp/provider-config.yaml
        raw:
          data: |
            {{`{{workflow.parameters.provider-config}}`}}
      parameters:
      - name: pipeline-id
      - name: image
    metadata:
      {{- .Values.manager.argo.metadataDefaults | toYaml | nindent 6 }}
    script:
      command:
      - ash
      image: "{{`{{inputs.parameters.image}}`}}"
      source: /provider.sh pipeline update /tmp/pipeline-config.yaml /tmp/provider-config.yaml '{{`{{inputs.parameters.pipeline-id}}`}}'
    {{- include "kfp-operator.notEmptyYaml" .Values.manager.argo.containerDefaults | nindent 6 }}
  - name: delete
    inputs:
      parameters:
      - name: image
      artifacts:
      - name: pipeline-config
        path: /tmp/pipeline-config.yaml
        raw:
          data: |
            {{`{{workflow.parameters.pipeline-config}}`}}
      - name: provider-config
        path: /tmp/provider-config.yaml
        raw:
          data: |
            {{`{{workflow.parameters.provider-config}}`}}
    metadata:
      {{- .Values.manager.argo.metadataDefaults | toYaml | nindent 6 }}
    script:
      command:
      - ash
      image: "{{`{{inputs.parameters.image}}`}}"
      source: /provider.sh pipeline delete /tmp/pipeline-config.yaml /tmp/provider-config.yaml '{{`{{workflow.parameters.pipeline-id}}`}}'
    {{- include "kfp-operator.notEmptyYaml" .Values.manager.argo.containerDefaults | nindent 6 }}
---
apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: {{ include "kfp-operator.fullname" . }}-create-pipeline
spec:
  arguments:
    parameters:
      - name: pipeline-config
      - name: pipeline-image
      - name: pipeline-name
      - name: pipeline-version
      - name: provider-config
  entrypoint: main
  {{ if .Values.manager.argo.serviceAccount -}}
  serviceAccountName: {{ .Values.manager.argo.serviceAccount }}
  {{- end }}
  templates:
    - name: main
      outputs:
        parameters:
        - name: pipeline-id
          valueFrom:
            parameter: '{{`{{steps.upload.outputs.result}}`}}'
        - name: pipeline-version
          valueFrom:
            parameter: '{{`{{steps.update.outputs.result}}`}}'
      steps:
      - - name: select-image
          templateRef:
            name: {{ include "kfp-operator.fullname" . }}-pipeline-steps
            template: select-image
            clusterScope: true
      - - name: compile
          templateRef:
            name: {{ include "kfp-operator.fullname" . }}-pipeline-steps
            template: compile
            clusterScope: true
      - - name: upload
          arguments:
            artifacts:
            - from: '{{`{{steps.compile.outputs.artifacts.pipeline}}`}}'
              name: pipeline
            parameters:
            - name: image
              value: '{{`{{steps.select-image.outputs.result}}`}}'
          templateRef:
            name: {{ include "kfp-operator.fullname" . }}-pipeline-steps
            template: upload
            clusterScope: true
      - - name: update
          arguments:
            artifacts:
            - from: '{{`{{steps.compile.outputs.artifacts.pipeline}}`}}'
              name: pipeline
            parameters:
            - name: pipeline-id
              value: '{{`{{steps.upload.outputs.result}}`}}'
            - name: image
              value: '{{`{{steps.select-image.outputs.result}}`}}'
          continueOn:
            failed: true
          templateRef:
            name: {{ include "kfp-operator.fullname" . }}-pipeline-steps
            template: update
            clusterScope: true
---
apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: {{ include "kfp-operator.fullname" . }}-update-pipeline
spec:
  arguments:
    parameters:
      - name: pipeline-config
      - name: pipeline-image
      - name: pipeline-id
      - name: pipeline-version
      - name: provider-config
  entrypoint: main
  {{ if .Values.manager.argo.serviceAccount -}}
  serviceAccountName: {{ .Values.manager.argo.serviceAccount }}
  {{- end }}
  templates:
    - name: main
      outputs:
        parameters:
        - name: pipeline-version
          valueFrom:
            parameter: '{{`{{steps.update.outputs.result}}`}}'
      steps:
      - - name: select-image
          templateRef:
            name: {{ include "kfp-operator.fullname" . }}-pipeline-steps
            template: select-image
            clusterScope: true
      - - name: compile
          templateRef:
            name: {{ include "kfp-operator.fullname" . }}-pipeline-steps
            template: compile
            clusterScope: true
      - - name: update
          arguments:
            artifacts:
            - from: '{{`{{steps.compile.outputs.artifacts.pipeline}}`}}'
              name: pipeline
            parameters:
            - name: pipeline-id
              value: '{{`{{workflow.parameters.pipeline-id}}`}}'
            - name: image
              value: '{{`{{steps.select-image.outputs.result}}`}}'
          templateRef:
            name: {{ include "kfp-operator.fullname" . }}-pipeline-steps
            template: update
            clusterScope: true
---
apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: {{ include "kfp-operator.fullname" . }}-delete-pipeline
spec:
  arguments:
    parameters:
    - name: pipeline-id
    - name: provider-config
  entrypoint: main
  {{ if .Values.manager.argo.serviceAccount -}}
  serviceAccountName: {{ .Values.manager.argo.serviceAccount }}
  {{- end }}
  templates:
  - name: main
    steps:
    - - name: select-image
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-pipeline-steps
          template: select-image
          clusterScope: true
    - - name: delete
        arguments:
          parameters:
          - name: image
            value: '{{`{{steps.select-image.outputs.result}}`}}'
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-pipeline-steps
          template: delete
          clusterScope: true
