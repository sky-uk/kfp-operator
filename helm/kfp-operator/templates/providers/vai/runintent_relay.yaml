{{- range $providerName, $providerBlock := .Values.providers -}}
{{- if eq $providerBlock.type "vai" -}}
---
apiVersion: argoproj.io/v1alpha1
kind: EventSource
metadata:
  name: {{ include "kfp-operator.fullname" $ }}-{{ $providerName }}-run-enqueuer
  namespace: {{ include "kfp-operator.argoNamespace" $ }}
spec:
  template:
    metadata:
      {{- $.Values.manager.argo.metadataDefaults | toYaml | nindent 6 }}
    serviceAccountName: {{ $providerBlock.serviceAccount.name }}
  pubSub:
    run-intents:
      jsonBody: true
      projectID: {{ $providerBlock.configuration.vaiProject }}
      subscriptionID: {{ $providerBlock.configuration.enqueuerRunIntentsSubscription }}
---
apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: {{ include "kfp-operator.fullname" $ }}-{{ $providerName }}-run-enqueuer
  namespace: {{ include "kfp-operator.argoNamespace" $ }}
spec:
  template:
    serviceAccountName: {{ $providerBlock.serviceAccount.name }}
    metadata:
      {{- $.Values.manager.argo.metadataDefaults | toYaml | nindent 6 }}
  dependencies:
    - name: run-intents
      eventSourceName: {{ include "kfp-operator.fullname" $ }}-{{ $providerName }}-run-enqueuer
      eventName: run-intents
  triggers:
  - template:
      name: enqueue-run
      k8s:
        operation: create
        source:
          resource:
            apiVersion: argoproj.io/v1alpha1
            kind: Workflow
            metadata:
              generateName: {{ include "kfp-operator.fullname" $ }}-{{ $providerName }}-enqueue-run-
            spec:
              ttlStrategy:
                secondsAfterCompletion: 300
              serviceAccountName: {{ $providerBlock.serviceAccount.name }}
              entrypoint: enqueue
              arguments:
                parameters:
                - name: run-intent
                  value: "set from parameters block below"
              templates:
              - name: enqueue
                metadata:
                  {{- $.Values.manager.argo.metadataDefaults | toYaml | nindent 18 }}
                inputs:
                  artifacts:
                  - name: provider-config
                    path: /provider-config.yaml
                    raw:
                      data: |
                        {{- $providerBlock.configuration | toYaml | nindent 24 }}
                  - name: run-intent
                    path: /run-intent.json
                    raw:
                      data: |
                        {{`{{workflow.parameters.run-intent}}`}}
                container:
                  image: {{ include "kfp-operator.providerImage" (merge (dict "Provider" $providerBlock) $ ) }}
                  command:
                  - /provider
                  args:
                  - --provider-config
                  - /provider-config.yaml
                  - custom
                  - vai-run
                  - enqueue
                  - --run-intent
                  - /run-intent.json
        parameters:
          - src:
              dependencyName: run-intents
              dataKey: body
            dest: spec.arguments.parameters.0.value
{{ end }}
{{- end -}}
