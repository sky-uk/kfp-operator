{{- if (include "kfp-operator.providerTypeExists" (merge (dict "ProviderType" "vai") . )) -}}
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: {{ include "kfp-operator.fullname" . }}-submit-vai-run
  namespace: {{ include "kfp-operator.argoNamespace" . }}
spec:
  volumes:
  - name: providers-config
    configMap:
      name: {{ include "kfp-operator.fullname" $ }}-providers
  ttlStrategy:
    {{- .Values.manager.argo.ttlStrategy | toYaml | nindent 4 }}
  arguments:
    parameters:
    - name: run
    - name: provider-name
  entrypoint: main
  templates:
  - name: main
    steps:
    - - name: select-provider-image
        templateRef:
          name: {{ include "kfp-operator.fullname" . }}-common-steps
          template: select-provider-parameter
        arguments:
          parameters:
          - name: parameter
            value: image
    - - name: submit
        arguments:
          parameters:
          - name: provider-image
            value: '{{`{{steps.select-provider-image.outputs.result}}`}}'
        template: submit
  - name: submit
    metadata:
      {{- $.Values.manager.argo.metadataDefaults | toYaml | nindent 10 }}
    inputs:
      parameters:
      - name: provider-image
      artifacts:
      - name: run
        path: /run.json
        raw:
          data: |
            {{`{{workflow.parameters.run}}`}}
    container:
      image: '{{`{{inputs.parameters.provider-image}}`}}'
      volumeMounts:
      - name: providers-config
        mountPath: /providers-config
      command:
      - /provider
      args:
      - --provider-config
      - /providers-config/{{`{{workflow.parameters.provider-name}}`}}
      - custom
      - vai-run
      - submit
      - --run
      - /run.json
{{- end -}}
{{- range $providerName, $providerBlock := .Values.providers -}}
{{- if eq $providerBlock.type "vai" }}
---
apiVersion: argoproj.io/v1alpha1
kind: EventSource
metadata:
  name: {{ include "kfp-operator.fullname" $ }}-{{ $providerName }}-run-submitter
  namespace: {{ include "kfp-operator.argoNamespace" $ }}
spec:
  template:
    metadata:
      {{- $.Values.manager.argo.metadataDefaults | toYaml | nindent 6 }}
    serviceAccountName: {{ $providerBlock.configuration.serviceAccount }}
  pubSub:
    runs:
      jsonBody: true
      projectID: {{ $providerBlock.configuration.vaiProject }}
      subscriptionID: {{ $providerBlock.configuration.submitterRunsSubscription }}
---
apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: {{ include "kfp-operator.fullname" $ }}-{{ $providerName }}-run-submitter
  namespace: {{ include "kfp-operator.argoNamespace" $ }}
spec:
  template:
    serviceAccountName: {{ $providerBlock.configuration.serviceAccount }}
    metadata:
      {{- $.Values.manager.argo.metadataDefaults | toYaml | nindent 6 }}
  dependencies:
    - name: runs
      eventSourceName: {{ include "kfp-operator.fullname" $ }}-{{ $providerName }}-run-submitter
      eventName: runs
  triggers:
  - template:
      name: submit-run
      k8s:
        operation: create
        source:
          resource:
            apiVersion: argoproj.io/v1alpha1
            kind: Workflow
            metadata:
              generateName: {{ include "kfp-operator.fullname" $ }}-submit-run-
            spec:
              serviceAccountName: {{ $providerBlock.configuration.serviceAccount }}
              arguments:
                parameters:
                - name: run
                  value: "set below"
                - name: provider-name
                  value: "{{ $providerName }}"
              workflowTemplateRef:
                name: {{ include "kfp-operator.fullname" $ }}-submit-vai-run
        parameters:
          - src:
              dependencyName: runs
              dataKey: body
            dest: spec.arguments.parameters.0.value
{{ end }}
{{- end -}}
