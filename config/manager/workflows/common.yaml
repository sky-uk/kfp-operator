apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: common-steps
  namespace: kfp-operator-system
spec:
  templates:
  - name: select-resource-image
    inputs:
      artifacts:
      - name: resource-definition
        path: /resource-definition.json
        raw:
          data: |
            {{workflow.parameters.resource-definition}}
    script:
      command:
      - ash
      image: mikefarah/yq:4.45.1
      source: yq e -r '.image' /resource-definition.json
    metadata: {}
    activeDeadlineSeconds: 300
  - name: url-encode
    inputs:
      parameters:
      - name: unencoded
    outputs:
      parameters:
      - name: url-encoded
        valueFrom:
          path: "/tmp/url-encoded.txt"
    metadata: {}
    container:
      image: stedolan/jq:latest
      command: [sh, -c]
      args:
      - |
        echo -n "{{inputs.parameters.unencoded}}" | jq -sRr @uri > /tmp/url-encoded.txt
  - name: create
    inputs:
      artifacts:
      - name: body
        path: /body.json
      parameters:
      - name: provider-service-url
    outputs:
      parameters:
      - name: provider-output
        valueFrom:
          path: /tmp/provider-output.json
    activeDeadlineSeconds: 300
    metadata: {}
    container:
      image: curlimages/curl:8.12.1
      command: [sh, -c]
      args:
      - |
        HTTP_RESPONSE=$(
          curl -v -s -o /tmp/provider-output.json -w "%{response_code}" -X POST \
              -H "Content-Type: application/json" \
              --data-binary @{{inputs.artifacts.body.path}} \
              "{{workflow.parameters.provider-service-url}}/resource/{{workflow.parameters.resource-kind}}"
        )

        case $HTTP_RESPONSE in
          501)  exit 1 ;;
          *) exit 0 ;;
        esac
  - name: update
    inputs:
      artifacts:
      - name: body
        path: /body.json
      parameters:
      - name: url-encoded-resource-id
      - name: provider-service-url
    outputs:
      parameters:
      - name: provider-output
        valueFrom:
          path: /tmp/provider-output.json
    activeDeadlineSeconds: 300
    metadata: {}
    container:
      image: curlimages/curl:8.12.1
      command: [sh, -c]
      args:
      - |
        HTTP_RESPONSE=$(
          curl -v -o /tmp/provider-output.json -w "%{response_code}" -X PUT -H "Content-Type: application/json" \
              --data-binary @{{inputs.artifacts.body.path}} \
              "{{workflow.parameters.provider-service-url}}/resource/{{workflow.parameters.resource-kind}}/{{inputs.parameters.url-encoded-resource-id}}"
        )

        case $HTTP_RESPONSE in
          501)  exit 1 ;;
          *) exit 0 ;;
        esac
  - name: delete
    inputs:
      parameters:
      - name: url-encoded-resource-id
      - name: provider-service-url
    outputs:
      parameters:
      - name: provider-output
        valueFrom:
          path: /tmp/provider-output.json
    metadata: {}
    activeDeadlineSeconds: 300
    container:
      image: curlimages/curl:8.12.1
      command: [sh, -c]
      args:
      - |
        HTTP_RESPONSE=$(
          curl -v -o /tmp/provider-output.json -w "%{response_code}" -X DELETE \
              "{{inputs.parameters.provider-service-url}}/resource/{{workflow.parameters.resource-kind}}/{{inputs.parameters.url-encoded-resource-id}}"
        )

        case $HTTP_RESPONSE in
          501)  exit 1 ;;
          *) exit 0 ;;
        esac
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: delete
  namespace: kfp-operator-system
spec:
  ttlStrategy:
    secondsAfterCompletion: 3600
  arguments:
    parameters:
    - name: provider-name
    - name: provider-service-url
    - name: resource-kind
    - name: resource-id
  entrypoint: main
  serviceAccountName: kfp-operator-argo
  templates:
  - name: main
    outputs:
      parameters:
      - name: provider-output
        valueFrom:
          parameter: '{{steps.provider.outputs.parameters.provider-output}}'
    steps:
    - - name: url-encode-resource-id
        templateRef:
          name: kfp-operator-common-steps
          template: url-encode
        arguments:
          parameters:
          - name: unencoded
            value: '{{workflow.parameters.resource-id}}'
    - - name: provider
        templateRef:
          name: kfp-operator-common-steps
          template: delete
        arguments:
          parameters:
          - name: url-encoded-resource-id
            value: '{{steps.url-encode-resource-id.outputs.parameters.url-encoded}}'
          - name: provider-service-url
            value: '{{workflow.parameters.provider-service-url}}'
